"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FUNCTION = exports.OPERATOR = void 0;
const OPERATOR = [
    {
        'value': '+',
        'label': '+',
        'alias': '+',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '-',
        'label': '-',
        'alias': '-',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '*',
        'label': 'x',
        'alias': 'x',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '/',
        'label': '/',
        'alias': '/',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '%',
        'label': '%',
        'alias': '%',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '^',
        'label': '^',
        'alias': '^',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '>=',
        'label': '>=',
        'alias': '>=',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '<=',
        'label': '<=',
        'alias': '<=',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '==',
        'label': '=',
        'alias': '=',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '!=',
        'label': '<>',
        'alias': '<>',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '>',
        'label': '>',
        'alias': '>',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '<',
        'label': '<',
        'alias': '<',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '&&',
        'label': 'AND',
        'alias': 'AND',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '||',
        'label': 'OR',
        'alias': 'OR',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': '(',
        'label': '(',
        'alias': '(',
        'show': 1,
        'formula_component_value': 'operator',
    },
    {
        'value': ')',
        'label': ')',
        'alias': ')',
        'show': 1,
        'formula_component_value': 'operator',
    },
];
exports.OPERATOR = OPERATOR;
const FUNCTION = {
    'attendance_type': {
        'value': 'attendance_type',
        'label': 'Attendance Type (e.g "Manual Schedule" / "Weekly Regular")',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['attendance_type'],
    },
    'los': {
        'value': 'los',
        'label': 'Length Of Service (e.g 3650)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['lengthOfServiceDays'],
    },
    'los_payroll': {
        'value': 'los_payroll',
        'label': 'Length Of Service Based On Payroll Start Date (e.g 30)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['lengthOfServiceDaysPayroll'],
    },
    'assigned_schedule': {
        'value': 'total_assigned_schedule',
        'label': 'Total Assigned Schedule (e.g 25)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['assignedSchedule'],
    },
    'working_days': {
        'value': 'working_days',
        'label': 'Total Working Days (e.g 26)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['workDays'],
    },
    'presence': {
        'value': 'presence',
        'label': 'Total Presence Days (e.g 20)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['presenceDays'],
    },
    'late_in': {
        'value': 'late_in',
        'label': 'Total Late In (e.g 10)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['lateIn'],
    },
    'total_alpha': {
        'value': 'total_alpha',
        'label': 'Total Absent / Alpha (e.g 2)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['totalAlpha'],
    },
    'total_no_clock_out_w_o_fix_attendance': {
        'value': 'total_no_clock_out_w_o_fix_attendance',
        'label': 'Total No Clock Out (e.g 10)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['totalNoClockOut'],
    },
    'payroll_start_date': {
        'value': 'payroll_start_date',
        'label': 'Payroll Start Date',
        'show': 0,
        'formula_component_value': 'function',
        'map_key': ['payrollStartDate'],
    },
    'payroll_end_date': {
        'value': 'payroll_end_date',
        'label': 'Payroll End Date',
        'show': 0,
        'formula_component_value': 'function',
        'map_key': ['payrollEndDate'],
    },
    'join_date': {
        'value': 'join_date',
        'label': 'Employee Join Date (e.g 2022-04-12)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': [],
    },
    'resign_date': {
        'value': 'resign_date',
        'label': 'Employee Resign Date (e.g 2023-12-12)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': [],
    },
    'early_out': {
        'value': 'early_out',
        'label': 'Total Early Out (e.g 3)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['earlyOut'],
    },
    'early_in': {
        'value': 'early_in',
        'label': 'Total Early In (e.g 3)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['earlyIn'],
    },
    'work_on_holiday': {
        'value': 'work_on_holiday',
        'label': 'Total Work on Holiday (e.g 6)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['workOnHoliday'],
    },
    'presence_percentage': {
        'value': 'presence_percentage',
        'label': 'Presence Percentage (e.g 30%)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['presencePercentage'],
    },
    'work_time': {
        'value': 'work_time',
        'label': 'Total Working Time (e.g 8h 30m)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['workTime'],
    },
    'break_time': {
        'value': 'break_time',
        'label': 'Total Break Time (e.g 1h 30m)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['breakTime'],
    },
    'avg_work_time': {
        'value': 'avg_work_time',
        'label': 'Total Average Working Time (e.g 7h 0m)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['avgWorkTime'],
    },
    'avg_break_time': {
        'value': 'avg_break_time',
        'label': 'Total Average Break Time (e.g 1h 0m)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['avgBreakTime'],
    },
    // Leave: gabungan total cuti tahunan, cuti setengah hari, izin, sakit semua paid/unpaid
    // Hasil dari keseluruhan dari half_day_leave dan full_day_leave, untuk value bisa berupa desimal
    'leave': {
        'value': 'leave',
        'label': 'Total Leave (e.g 3.5)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['leave'],
    },
    'half_day_leave': {
        'value': 'half_day_leave',
        'label': 'Total Half Day Leave (e.g 4)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['halfDayLeave'],
    },
    'full_day_leave': {
        'value': 'full_day_leave',
        'label': 'Total Full Day Leave (e.g 6)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['totalFullDayLeave'],
    },
    'permission': {
        'value': 'permission',
        'label': 'Total Permission',
        'show': 0,
        'formula_component_value': 'function',
        'map_key': ['permission'],
    },
    'sick': {
        'value': 'sick',
        'label': 'Total Sick',
        'show': 0,
        'formula_component_value': 'function',
        'map_key': ['sick'],
    },
    'unpaid_timeoff': {
        'value': 'unpaid_timeoff',
        'label': 'Total Unpaid Timeoff (e.g 2)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['unpaidTimeoff'],
    },
    'paid_timeoff': {
        'value': 'paid_timeoff',
        'label': 'Total Paid Timeoff (e.g 2)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['paidTimeoff'],
    },
    'invalid_clock_in': {
        'value': 'invalid_clock_in',
        'label': 'Total Invalid Clock In (e.g 2)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['invalidClockIn'],
    },
    'break_in': {
        'value': 'break_in',
        'label': 'Total Break In (e.g 5)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['breakIn'],
    },
    'break_off': {
        'value': 'break_off',
        'label': 'Total Break Off (e.g 5)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['breakOff'],
    },
    'total_clock_in_on_branch_location': {
        'value': 'total_clock_in_on_branch_location',
        'label': 'Total Clock In from Branch Location (e.g 25)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['total_clock_in_on_branch_location'],
    },
    'total_clock_out_on_branch_location': {
        'value': 'total_clock_out_on_branch_location',
        'label': 'Total Clock Out from Branch Location (e.g 25)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['total_clock_out_on_branch_location'],
    },
    'total_clock_in_from_all_shift_location': {
        'value': 'total_clock_in_from_all_shift_location',
        'label': 'Total Clock In from All Shift Location (e.g 25)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['total_clock_in_from_all_shift_location'],
    },
    'total_clock_out_from_all_shift_location': {
        'value': 'total_clock_out_from_all_shift_location',
        'label': 'Total Clock Out from All Shift Location (e.g 25)',
        'show': 1,
        'formula_component_value': 'function',
    },
    'total_late_deduction': {
        'value': 'total_late_deduction',
        'label': 'Total Late Deduction (e.g 15000)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['late_deduction'],
    },
    'total_early_out_deduction': {
        'value': 'total_early_out_deduction',
        'label': 'Total Early Out Deduction (e.g 15000)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['early_out_deduction'],
    },
    'emp_work_group_name': {
        'value': 'emp_work_group_name',
        'label': 'Employee Work Group Name',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['work_groups'],
    },
    'emp_work_shift_name': {
        'value': 'emp_work_shift_name',
        'label': 'Employee Work Shift Name',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': ['work_shifts'],
    },
    'current_cutoff_week': {
        'value': 'current_cutoff_week',
        'label': 'Current Cutoff Week (Week 1-5)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': [],
    },
    'is_last_week_of_this_month': {
        'value': 'is_last_week_of_this_month',
        'label': 'Is Last Week of This Month (Week 4 or 5)',
        'show': 1,
        'formula_component_value': 'function',
        'map_key': [],
    },
};
exports.FUNCTION = FUNCTION;
